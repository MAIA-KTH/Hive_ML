{
  "title": "Hive-ML configuration template",
  "description": "A JSON template used to set the configuration parameters for experiments based on Hive-ML framework.",
  "properties": {
    "image_suffix": {
      "type": "string or List[string]",
      "description": "File suffix (or list of File suffixes) of the files containing the image volume. Example: \"_image.nii.gz\""
    },
    "mask_suffix": {
      "type": "string",
      "description": "File suffix (including file extension) of the files containing the segmentation mask of the ROI. Example: \"_mask.nii.gz\""
    },
    "models": {
      "type": "Dict[str,Dict[str,Any]]",
      "description": "Dictionary for all the classifiers to evaluate. Each element includes the classifier class name and an additional dictionary with the kwargs to pass to the classifier object."
    },
    "feature_selection": {
      "type": "str",
      "description": "Type of Feature Selection to perform. Supported values are ``SFFS`` and ``PCA`` ."
    },
    "n_features": {
      "type": "int",
      "description": "Number of features to preserve when performing Feature Selection.  Example: ``30``."
    },
    "feature_aggregator": {
      "type": "str",
      "description": "Aggregation strategy used when extracting features in the 4D. Supported values are: ``Flat`` (no aggregation, all features are preserved), ``Mean`` (Average over the 4-th dimension), ``SD`` (Standard Deviation over the 4-th dimension), ``Mean_Norm`` (Independent channel-normalization, followed by average over the 4-th dimension), ``SD_Norm`` (Independent channel-normalization, followed by SD over the 4-th dimension)"
    },
    "random_seed": {
      "type": "integer",
      "description": "Random seed number used when randomizing events and actions. Example: 12345"
    },
    "label_dict": {
      "type": "Dict[str,str]",
      "description": "Dictionary describing the classes. The key-value pair contains the label value as key (starting from ``0``) and the class description as value. Example: \"0\": \"pCR\""
    },
    "perfusion_maps": {
      "type": "Dict[str,Any]",
      "description": "Dictionary describing the perfusion maps to extract. Each element includes the perfusion map name and the file suffix used to save the perfusion map."
    },
    "n_folds": {
      "type": "integer",
      "description": "Number of folds to run cross-validation. Example: 5."
    }
  },
  "required": [
    "image_suffix",
    "mask_suffix",
    "label_dict",
    "models",
    "feature_selection",
    "n_features",
    "n_folds",
    "random_seed",
    "perfusion_maps",
    "feature_aggregator"
  ]
}
